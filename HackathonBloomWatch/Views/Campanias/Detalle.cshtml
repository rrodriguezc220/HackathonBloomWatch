@model HackathonBloomWatch.Models.Campania

@{
    ViewData["Title"] = "Detalle Campaña";
}

<div class="pt-3">
    <div class="bg-light p-3 rounded-3">
        <div class="row">
            <div class="col-md-3">
                <p class="text-green-950 fw-bold mt-3">
                    <i class="fa-solid fa-diagram-project text-green-500"></i> Datos de la campaña
                </p>
                <div class="d-flex flex-column p-4 bg-white rounded-3">
                    <span class="text-green-800">
                        Nombre de la campaña
                    </span>
                    <span class="mt-1 text-green-950 fw-bold">
                        @Model.NombreCampania
                    </span>
                    <span class="mt-3 text-green-800">
                        Año de la campaña
                    </span>
                    <span class="mt-1 text-green-950 fw-bold">
                        @Model.AnioCampania
                    </span>
                    <span class="mt-3 text-green-800">
                        Fecha de proceso
                    </span>
                    <span class="mt-1 text-green-950 fw-bold">
                        @Model.FechaProceso.ToShortDateString()
                    </span>
                </div>
                <p class="text-green-950 fw-bold mt-3">
                    <i class="fa-solid fa-clipboard-list text-green-500"></i> Resumen de registros
                </p>
                <div class="d-flex flex-column p-4 bg-white rounded-3">
                    <span class="text-green-800">
                        N° Especies de planta
                    </span>
                    <span class="mt-1 text-green-950 fw-bold">
                        @Model.CampaniaDetalles.DistinctBy(cd => cd.IdEspeciePlanta).Count()
                    </span>
                    <span class="mt-3 text-green-800">
                        Total Registros
                    </span>
                    <span class="mt-1 text-green-950 fw-bold">
                        @Model.CampaniaDetalles.Count()
                    </span>
                    <button type="button" class="btn btn-info mt-1 me-auto" data-bs-toggle="modal" data-bs-target="#verDetalleModal">
                        Ver <i class="fa-solid fa-list"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-9">
                <div id="map" style="min-height: 80vh;"></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="verDetalleModal" tabindex="-1" aria-labelledby="verDetalleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-center" id="verDetalleModalLabel">Detalles de Campaña</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <tr>
                        <th>Actividad</th>
                        <th>Estado</th>
                        <th>Fecha</th>
                        <th>Especie</th>
                        <th>Macizo</th>
                        <th>Cantidad Elementos</th>
                        <th>Macizo Forestal</th>
                        <th>Agroforestal</th>
                    </tr>
                    @foreach (var detalle in Model.CampaniaDetalles)
                    {
                        <tr>
                            <td>@detalle.TipoActividad</td>
                            <td>@detalle.EstadoActividad</td>
                            <td>@detalle.FechaActividad?.ToShortDateString()</td>
                            <td>@detalle.IdEspeciePlanta</td>
                            <td>@detalle.IdMacizoForestal</td>
                            <td>@detalle.CantidadElementos</td>
                            <td>@detalle.ValorMacizoForestal</td>
                            <td>@detalle.Agroforestal</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="detalleModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable modal-fullscreen-lg-down modal-xl">
        <div class="modal-content bg-light">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Detalle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <p class="text-green-950 fw-bold mt-3">
                            <i class="fa-solid fa-diagram-project text-green-500"></i> Detalle del registro
                        </p>
                        <div class="d-flex flex-column p-3 bg-white rounded-3">
                            <span class="text-green-800">
                                Actividad
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalTipoActividad"></span>
                            <span class="mt-3 text-green-800">
                                Estado
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalEstado"></span>
                            <span class="mt-3 text-green-800">
                                Fecha de actividad
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalFechaActividad"></span>
                        </div>
                        <p class="text-green-950 fw-bold mt-3">
                            <i class="fa-solid fa-location-dot text-green-500"></i> Información de localización
                        </p>
                        <div class="d-flex flex-column p-3 bg-white rounded-3">
                            <span class="mt-3 text-green-800">
                                Provincia
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalProvincia"></span>
                            <span class="mt-3 text-green-800">
                                Distrito
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalDistrito"></span>
                            <span class="mt-3 text-green-800">
                                Localidad
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalLocalidad"></span>
                            <span class="mt-3 text-green-800">
                                Área (ha)
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalArea"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <p class="text-green-950 fw-bold mt-3">
                            <i class="fa-brands fa-pagelines text-green-500"></i> Especie de Planta
                        </p>
                        <div class="d-flex flex-column p-3 bg-white rounded-3">
                            <div id="modalImagenContainer" class="text-center">
                                <img id="modalImagen" src="" alt="Imagen de especie" style="max-width: 100%; max-height: 250px;" />
                            </div>
                            <span class="mt-3 text-green-800">
                                Nombre Científico
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalNombreEspecie"></span>
                            <span class="mt-3 text-green-800">
                                Nombre Común
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalNombreComun"></span>
                            <span class="mt-3 text-green-800">
                                Cantidad de Elementos
                            </span>
                            <span class="mt-1 text-green-950 fw-bold" id="modalCantidadElementos"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@{
    var wktWriter = new NetTopologySuite.IO.WKTWriter();
}

@section Scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/wellknown/wellknown.js"></script>

    <script>
        var map = L.map('map').setView([-7.161, -78.512], 1); // Coordenadas aproximadas de Cajamarca

        // Capas base
        var osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        });

        var esriLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
            attribution: '&copy; Esri'
        });

        var baseMaps = {
            "OpenStreetMap": osmLayer,
            "ESRI Satelital": esriLayer
        };

        osmLayer.addTo(map);
        L.control.layers(baseMaps).addTo(map);

        // Definir capas vacías
        var regionCajamarca = L.layerGroup();
        var provinciasLayer = L.layerGroup();
        var distritosLayer = L.layerGroup();
        var campaniaDetalleLayer = L.layerGroup();

        // Función para cargar GeoJSON estáticos
        function cargarGeoJSON(url, capa, estilo, ajustarZoom = false) {
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    var geoLayer = L.geoJSON(data, {
                        style: estilo,
                        onEachFeature: function (feature, layer) {

                            if (feature.properties.NOMB_DIST) {
                                layer.bindTooltip(feature.properties.NOMB_DIST, {
                                    permanent: true,
                                    direction: 'center',
                                    className: 'map-label'
                                });
                            } else if (feature.properties.NOMB_PROV) {
                                layer.bindTooltip(feature.properties.NOMB_PROV, {
                                    permanent: true,
                                    direction: 'center',
                                    className: 'map-label'
                                });
                            }
                        }
                    });
                    geoLayer.addTo(capa);

                    // Si es la región de Cajamarca, ajustamos el zoom al contenido
                    if (ajustarZoom) {
                        var bounds = geoLayer.getBounds();
                        if (bounds.isValid()) {
                            map.fitBounds(bounds);
                        }
                    }
                })
                .catch(error => console.error('Error cargando GeoJSON:', error));
        }

        // Cargar capas estáticas con ajuste de zoom en la región
        function cargarCampaniaDetalle() {
            var geoJsonData = {
                "type": "FeatureCollection",
                "features": [
                    @foreach (var detalle in Model.CampaniaDetalles)
                    {
                        if (detalle.MacizoForestal.Geometria != null)
                        {
                            var wkt = wktWriter.Write(detalle.MacizoForestal.Geometria);

                            var imagenBase64 = detalle.EspeciePlanta.ImagenEspecie != null ? string.Format("data:image/png;base64,{0}", Convert.ToBase64String(detalle.EspeciePlanta.ImagenEspecie)) : "";

                            <text>
                                {
                                    "type": "Feature",
                                    "properties": {
                                        "IdCampaniaDetalle": @detalle.IdCampaniaDetalle,
                                        "TipoActividad": @Html.Raw(Json.Serialize(detalle.TipoActividad)),
                                        "EstadoActividad": @Html.Raw(Json.Serialize(detalle.EstadoActividad)),
                                        "FechaActividad": @Html.Raw(Json.Serialize(detalle.FechaActividad)),
                                        "CantidadElementos": @Html.Raw(Json.Serialize(detalle.CantidadElementos)),
                                        "Provincia": @Html.Raw(Json.Serialize(detalle.MacizoForestal.Provincia)),
                                        "Distrito": @Html.Raw(Json.Serialize(detalle.MacizoForestal.Distrito)),
                                        "Localidad": @Html.Raw(Json.Serialize(detalle.MacizoForestal.Localidad)),
                                        "AreaHectareas": @detalle.MacizoForestal.AreaHectareas,
                                        "NombreEspecie": @Html.Raw(Json.Serialize(detalle.EspeciePlanta.NombreEspecie)),
                                        "NombreComun": @Html.Raw(Json.Serialize(detalle.EspeciePlanta.NombreComun)),
                                        "ImagenEspecie": @Html.Raw(Json.Serialize(imagenBase64))
                                    },
                                    "geometry": wellknown.parse("@wkt")
                                },
                            </text>
                        }
                    }
                ]
            };

            var geoLayer = L.geoJSON(geoJsonData, {
                style: function (feature) {
                    return {
                        color: feature.properties.TipoActividad !== "Hoyada" ? "#58d08d" : "brown",
                        weight: 1,
                        fillOpacity: 0.2
                    };
                },
                onEachFeature: function (feature, layer) {
                    layer.on("click", function () {
                        $("#modalTipoActividad").text(feature.properties.TipoActividad);
                        $("#modalEstado").text(feature.properties.EstadoActividad);
                        $("#modalFechaActividad").text(feature.properties.FechaActividad);
                        $("#modalCantidadElementos").text(feature.properties.CantidadElementos);
                        $("#modalNombreEspecie").text(feature.properties.NombreEspecie);
                        $("#modalProvincia").text(feature.properties.Provincia);
                        $("#modalDistrito").text(feature.properties.Distrito);
                        $("#modalArea").text(feature.properties.AreaHectareas);
                        $("#modalLocalidad").text(feature.properties.Localidad);
                        $("#modalNombreComun").text(feature.properties.NombreComun);

                        const imagenUrl = feature.properties.ImagenEspecie;
                        if (imagenUrl) {
                            $("#modalImagen").attr("src", imagenUrl);
                            $("#modalImagenContainer").css("display", "block");
                        } else {
                            $("#modalImagenContainer").css("display", "none");
                        }
                        $("#detalleModal").modal("show");
                    });
                }
            });

            geoLayer.addTo(campaniaDetalleLayer);
        }

        // Cargar capas estáticas
        cargarGeoJSON('/geoJson/region_cajamarca.json', regionCajamarca,
            { color: "#58d08d", weight: 1, fillOpacity: 0.05 }, true);
        cargarGeoJSON('/geoJson/provincias_cajamarca.json', provinciasLayer,
            { color: "#58d08d", weight: 1, fillOpacity: 0.05 });
        cargarGeoJSON('/geoJson/distritos_cajamarca.json', distritosLayer,
            { color: "#58d08d", weight: 1, fillOpacity: 0.05 });

        cargarCampaniaDetalle();

        // Evento para cambiar capas según el zoom
        map.on('zoomend', function () {
            var zoomLevel = map.getZoom();

            map.eachLayer(function (layer) {

                if (layer !== baseMaps["OpenStreetMap"] && layer !== baseMaps["ESRI Satelital"]) {
                    map.removeLayer(layer);
                }
            });

            if (zoomLevel <= 8) {
                regionCajamarca.addTo(map);
            } else if (zoomLevel > 8 && zoomLevel <= 9) {
                provinciasLayer.addTo(map);
            } else if (zoomLevel > 9) {
                distritosLayer.addTo(map);
            }
            campaniaDetalleLayer.addTo(map);
        });

    </script>
}
